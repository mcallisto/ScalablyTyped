[debug] PhaseRunner.scala:92 Ignored [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/adapter.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, adapter))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, adapter)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/adapters/errors.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, adapters, errors))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, adapters, errors)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/adapters/json-api.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, adapters, json-api))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, adapters, json-api)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/adapters/rest.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, adapters, rest))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, adapters, rest)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/attr.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, attr))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, attr)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/index.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/model.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, model))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, model)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/relationships.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, relationships))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, relationships)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/serializer.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, serializer))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, serializer)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/serializers/embedded-records-mixin.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, serializers, embedded-records-mixin))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, serializers, embedded-records-mixin)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/serializers/json-api.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, serializers, json-api))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, serializers, json-api)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/serializers/json.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, serializers, json))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, serializers, json)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/serializers/rest.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, serializers, rest))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, serializers, rest)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/store.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, store))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, store)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/transform.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, transform))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, transform)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/transforms/boolean.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, transforms, boolean))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, transforms, boolean)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/transforms/date.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, transforms, date))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, transforms, date)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/transforms/number.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, transforms, number))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, transforms, number)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/transforms/string.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, transforms, string))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, transforms, string)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/transforms/transform.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, transforms, transform))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, transforms, transform)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/types/registries/adapter.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, types, registries, adapter))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, types, registries, adapter)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/types/registries/model.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, types, registries, model))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, types, registries, model)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/types/registries/serializer.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, types, registries, serializer))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, types, registries, serializer)) [id => ember-data, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data/types/registries/transform.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember-data),TsIdentLibrarySimple(ember-data)),TsIdentModule(None,List(ember-data, types, registries, transform))) [id => ember-data, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember-data, types, registries, transform)) [id => ember-data, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:189 Processing TsIdentLibrarySimple(ember-data) [id => ember-data, phase => typescript] 
[warn ] QualifyReferences.scala:32 Couldn't qualify DS.Model [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclTypeAlias(ModelKeys) / TsTypeParam() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify DS.Model [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclTypeAlias(ModelKeys) / TsTypeRef() / TsTypeKeyOf() / TsTypeRef())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(AdapterError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(AdapterError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(InvalidError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(InvalidError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(UnauthorizedError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(UnauthorizedError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(ForbiddenError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(ForbiddenError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(NotFoundError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(NotFoundError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(ConflictError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(ConflictError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(ServerError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(ServerError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(TimeoutError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(TimeoutError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(AbortError)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(AbortError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(errorsHashToArray)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(errorsHashToArray) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(errorsArrayToHash)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/adapters/errors) / TsExport() / TsExporteeTree() / TsDeclVar(errorsArrayToHash) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Model)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsExport() / TsExporteeTree() / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Model)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsExport() / TsExporteeTree() / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(hasMany)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsExport() / TsExporteeTree() / TsDeclVar(hasMany) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DS), TsIdentSimple(belongsTo)))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsExport() / TsExporteeTree() / TsDeclVar(belongsTo) / TsTypeQuery())] 
[info ] ExpandTypeParams.scala:74 Expanding 4 members for TsIdentSimple(default) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/attr))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclTypeAlias(ModelKeys) / TsTypeRef() / TsTypeKeyOf())] 
[info ] ExpandTypeParams.scala:74 Expanding 4 members for TsIdentSimple(attr) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(normalizeModelName) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(buildURL) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForFindRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForFindAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForQuery) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForQueryRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForFindMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForFindHasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForFindBelongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForCreateRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForUpdateRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(urlForDeleteRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(BuildURLMixin) / TsMemberFunction(pathForType) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(SnapshotRecordArray) / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(attributes) / TsFunSig() / TsTypeObject() / TsMemberTypeMapped() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(changedAttributes) / TsFunSig() / TsTypeRef() / TsTypeObject() / TsMemberTypeMapped() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(createRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(getReference) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(peekRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(hasRecordForId) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(query) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(queryRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(peekAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(unloadAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(recordIsLoaded) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(modelFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(pushPayload) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(normalize) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, adapter)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, adapter)), TsIdentSimple(AdapterRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, adapter)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(adapterFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, serializer)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, serializer)), TsIdentSimple(SerializerRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, serializer)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(serializerFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(query) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(queryRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findHasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findBelongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(createRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(updateRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(deleteRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(buildURL) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForFindRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForFindAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForQuery) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForQueryRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForFindMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForFindHasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForFindBelongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForCreateRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForUpdateRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(urlForDeleteRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(pathForType) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(EmbeddedRecordsMixin) / TsMemberFunction(serializeBelongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(EmbeddedRecordsMixin) / TsMemberFunction(serializeHasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(EmbeddedRecordsMixin) / TsMemberFunction(removeEmbeddedForeignKey) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONAPISerializer) / TsMemberFunction(payloadKeyFromModelName) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONAPISerializer) / TsMemberFunction(payloadTypeFromModelName) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(shouldSerializeHasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serialize) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeIntoHash) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeAttribute) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeBelongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeHasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializePolymorphicType) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeId) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTSerializer) / TsMemberFunction(serialize) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTSerializer) / TsMemberFunction(serializeIntoHash) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTSerializer) / TsMemberFunction(payloadKeyFromModelName) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTSerializer) / TsMemberFunction(serializePolymorphicType) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTSerializer) / TsMemberFunction(payloadTypeFromModelName) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(findRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(findAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(query) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(queryRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(generateIdForRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(serialize) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(createRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(updateRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(deleteRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(findMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(shouldReloadRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(shouldReloadAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(shouldBackgroundReloadRecord) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(shouldBackgroundReloadAll) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Serializer) / TsMemberFunction(serialize) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] ExpandTypeParams.scala:74 Expanding 4 members for TsIdentSimple(attr) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(normalizeModelName) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(SnapshotRecordArray) / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Snapshot) / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclInterface(AttributeMeta) / TsMemberProperty(type) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclInterface(RelationshipMeta) / TsMemberProperty(type) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberProperty(modelName) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(typeForRelationship) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(inverseFor) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject() / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(TransformRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, transform)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(default),List(),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ember-data), TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(ModelRegistry))),List()),HasPath(TsIdentLibrarySimple(ember-data),TsQIdent(List(TsIdentModule(None,List(ember-data, types, registries, model)), TsIdentSimple(default)))))) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_IncludeId) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(serialize) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_IncludeId) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(toJSON) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AdapterOptions) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(destroyRecord) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AdapterOptions) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(save) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AdapterOptions) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(reload) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassModel) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassModel) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Id) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(belongsTo) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_False) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(hasMany) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Ids) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(hasMany) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AdapterOptions) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(query) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AdapterOptions) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(queryRecord) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AdapterOptionsBackgroundReload) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findAll) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassModel) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassModel) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassModelAttributes) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassModelAttributes) [id => ember-data, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(eachTransformedAttribute) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:42 Processing ember-data [id => ember-data, phase => scala.js] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclClass(Model) / TsMemberFunction(typeForRelationship) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(belongsTo) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(default) / TsDeclFunction(hasMany) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findAll) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(query) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(queryRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(findMany) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(createRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(updateRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(RESTAdapter) / TsMemberFunction(deleteRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(SnapshotRecordArray) / TsMemberProperty(type) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeIntoHash) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(JSONSerializer) / TsMemberFunction(serializeIntoHash) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Model) / TsMemberFunction(typeForRelationship) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberProperty(record) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberProperty(type) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K][L] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(attr) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(attr) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(belongsTo) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(belongsTo) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(belongsTo) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(hasMany) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(hasMany) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(hasMany) / TsTypeParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(eachAttribute) / TsTypeParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(eachAttribute) / TsTypeParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(eachRelationship) / TsTypeParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Snapshot) / TsMemberFunction(eachRelationship) / TsTypeParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(belongsTo) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(findRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(findAll) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(query) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(queryRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(generateIdForRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(createRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(updateRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(deleteRecord) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Adapter) / TsMemberFunction(findMany) / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclFunction(hasMany) / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(createRecord) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(createRecord) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findRecord) / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(getReference) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(getReference) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(peekRecord) / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(peekRecord) / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(query) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(query) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(query) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(query) / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(queryRecord) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(queryRecord) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findAll) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(findAll) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(peekAll) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(modelFor) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/adapter.AdapterRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(adapterFor) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/serializer.SerializerRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data) / TsDeclNamespace(DS) / TsDeclClass(Store) / TsMemberFunction(serializerFor) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/model) / TsDeclClass(default) / TsMemberFunction(typeForRelationship) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModel) / TsMemberFunction(typeForRelationship) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModel) / TsMemberFunction(eachAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModel) / TsMemberFunction(eachAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModel) / TsMemberFunction(eachTransformedAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModel) / TsMemberFunction(eachTransformedAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(hasMany) / TsMemberCall() / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeIntersect() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember-data/relationships) / TsDeclVar(belongsTo) / TsMemberCall() / TsFunParam() / TsTypeIntersect() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: ember-data.ember-data/types/registries/model.ModelRegistry[K] [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModelAttributes) / TsMemberFunction(typeForRelationship) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModelAttributes) / TsMemberFunction(eachAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModelAttributes) / TsMemberFunction(eachAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModelAttributes) / TsMemberFunction(eachTransformedAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ImportType.scala:237 Failed type conversion: typeof Model [id => ember-data, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassModelAttributes) / TsMemberFunction(eachTransformedAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] RemoveMultipleInheritance.scala:43 Dropped parents 
- emberDashDataLib.emberDashDataMod.DSNs.BuildURLMixin because Inheritance from two classes. Inlined buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, buildURL, urlForFindRecord, urlForFindAll, urlForQuery, urlForQueryRecord, urlForFindMany, urlForFindHasMany, urlForFindBelongsTo, urlForCreateRecord, urlForUpdateRecord, urlForDeleteRecord, pathForType [id => ember-data, phase => scala.js, this => Name(emberDashDataLib) / Name(emberDashDataMod) / Name(DSNs) / Name(RESTAdapter)] 
[info ] RemoveMultipleInheritance.scala:43 Dropped parents 
- atEmberObjectLib.promiseDashProxyDashMixinMod.PromiseProxyMixin because Inheritance from two classes. Inlined isFulfilled, isPending, isRejected, isSettled, promise, reason [id => ember-data, phase => scala.js, this => Name(emberDashDataLib) / Name(emberDashDataMod) / Name(DSNs) / Name(PromiseArray)] 
[info ] RemoveMultipleInheritance.scala:43 Dropped parents 
- atEmberObjectLib.promiseDashProxyDashMixinMod.PromiseProxyMixin because Inheritance from two classes. Inlined isFulfilled, isPending, isRejected, isSettled, promise, reason [id => ember-data, phase => scala.js, this => Name(emberDashDataLib) / Name(emberDashDataMod) / Name(DSNs) / Name(PromiseObject)] 
[info ] InferMemberOverrides.scala:86 added override methods List(Name(filter_ST), Name(uniq), Name(filter), Name(find), Name(contains), Name(compact), Name(reject), Name(find), Name(filterBy), Name(filterBy), Name(any), Name(filter), Name(reduce), Name(find), Name(isAny), Name(includes), Name(every), Name(isAny), Name(findBy), Name(isEvery), Name(sortBy), Name(map), Name(map), Name(findBy), Name(reduce_UU), Name(isEvery), Name(reduce), Name(toArray), Name(filter_ST), Name(any), Name(includes), Name(rejectBy), Name(mapBy), Name(every), Name(without), Name(find), Name(forEach), Name(invoke), Name(uniqBy), Name(getEach), Name(reject), Name(forEach), Name(rejectBy), Name(setEach)) [id => ember-data, phase => scala.js, this => Name(emberDashDataLib) / Name(emberDashDataMod) / Name(DSNs) / Name(Errors)] 
[debug] PhaseRunner.scala:84 Success [id => ember-data, phase => scala.js] 
[warn ] PhaseRunner.scala:70 Failed because of, [@ember/object => Compilation failed] [id => ember-data, phase => build] 
[error] PhaseRunner.scala:88 Failure, [@ember/object => Compilation failed] [id => ember-data, phase => build] 
