[info ] InferredDependency.scala:22 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(pg-promise) [id => pg-promise, phase => typescript, file => ../pg-promise/typescript/pg-promise.d.ts] 
[debug] PhaseRunner.scala:84 Success [id => pg-promise, phase => typescript] 
[info ] InferredDependency.scala:22 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(pg-promise) [id => pg-promise, phase => typescript, file => ../pg-promise/typescript/pg-subset.d.ts] 
[debug] PhaseRunner.scala:84 Success [id => pg-promise, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => pg-promise, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/npm/node_modules/pg-promise/typescript/ext-promise.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/npm/node_modules/pg-promise),TsIdentLibrarySimple(pg-promise)),TsIdentModule(None,List(pg-promise, typescript, ext-promise))) [id => pg-promise, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(pg-promise, typescript, ext-promise)) [id => pg-promise, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/npm/node_modules/pg-promise/typescript/pg-promise.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/npm/node_modules/pg-promise),TsIdentLibrarySimple(pg-promise)),TsIdentModule(None,List(pg-promise))) [id => pg-promise, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(pg-promise)) [id => pg-promise, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/npm/node_modules/pg-promise/typescript/pg-subset.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/npm/node_modules/pg-promise),TsIdentLibrarySimple(pg-promise)),TsIdentModule(None,List(pg-promise, typescript, pg-subset))) [id => pg-promise, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(pg-promise, typescript, pg-subset)) [id => pg-promise, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:189 Processing TsIdentLibrarySimple(pg-promise) [id => pg-promise, phase => typescript] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(pgMinify)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclVar(minify) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(PromiseAdapter)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(PromiseAdapter) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(PreparedStatement)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(PreparedStatement) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(ParameterizedQuery)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(ParameterizedQuery) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(QueryFile)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(QueryFile) / TsTypeQuery())] 
[warn ] ResolveTypeQueries.scala:126 Couldn't resolve typeof queryResult [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(queryResult) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(pgMinify)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(minify) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(errors)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(errors) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(pg)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IMain) / TsMemberProperty(pg) / TsTypeQuery())] 
[warn ] ResolveTypeQueries.scala:126 Couldn't resolve typeof isolationLevel [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(ITXMode) / TsMemberProperty(isolationLevel) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(TransactionMode)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(ITXMode) / TsMemberProperty(TransactionMode) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Column)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IHelpers) / TsMemberProperty(Column) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(ColumnSet)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IHelpers) / TsMemberProperty(ColumnSet) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(TableName)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsExport() / TsExporteeTree() / TsDeclInterface(IHelpers) / TsMemberProperty(TableName) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(checkServerIdentity)))) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise/typescript/pg-subset) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(TSSLConfig) / TsTypeObject() / TsMemberProperty(checkServerIdentity) / TsTypeQuery())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Name) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(TSqlBuildConfig) / TsMemberProperty(module) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Options) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IMain) / TsMemberProperty(minify) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Typeoferrors) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IMain) / TsMemberProperty(errors) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Typeofpg) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IMain) / TsMemberProperty(pg) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Duration) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IBaseProtocol) / TsMemberFunction(stream) / TsFunSig() / TsTypeRef() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Tag) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IBaseProtocol) / TsMemberFunction(task) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Cnd) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IBaseProtocol) / TsMemberFunction(taskIf) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Mode) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IBaseProtocol) / TsMemberFunction(tx) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_CndMode) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IBaseProtocol) / TsMemberFunction(txIf) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Deferrable) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclClass(TransactionMode) / TsMemberFunction(constructor) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_CndModeTag) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(ITaskArguments) / TsMemberProperty(options) / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_IgnoreErrors) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IUtils) / TsMemberFunction(enumSql) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Binary) [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise/typescript/pg-subset) / TsDeclInterface(IResult) / TsMemberProperty(_types) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded promise into 1 methods [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(ILibConfig))] 
[info ] ExpandCallables.scala:48 Expanded pgp into 1 methods [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(ILibConfig))] 
[info ] ExpandCallables.scala:48 Expanded minify into 2 methods [id => pg-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(pg-promise) / TsDeclInterface(IMain))] 
[debug] PhaseRunner.scala:84 Success [id => pg-promise, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:42 Processing pg-promise [id => pg-promise, phase => scala.js] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(^) [id => pg-promise, phase => scala.js, this => Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(^)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(^) [id => pg-promise, phase => scala.js, this => Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(^)] 
[info ] CompleteClass.scala:64 Completed implementations Vector(message, name) [id => pg-promise, phase => scala.js, this => Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(errorsNs) / Name(ParameterizedQueryError)] 
[info ] CompleteClass.scala:64 Completed implementations Vector(message, name) [id => pg-promise, phase => scala.js, this => Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(errorsNs) / Name(PreparedStatementError)] 
[info ] CompleteClass.scala:64 Completed implementations Vector(message, name) [id => pg-promise, phase => scala.js, this => Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(errorsNs) / Name(QueryFileError)] 
[info ] CompleteClass.scala:64 Completed implementations Vector(message, name) [id => pg-promise, phase => scala.js, this => Name(pgDashPromiseLib) / Name(pgDashPromiseMod) / Name(errorsNs) / Name(QueryResultError)] 
[debug] PhaseRunner.scala:84 Success [id => pg-promise, phase => scala.js] 
[warn ] Phase3Compile.scala:206 Building pg-promise... [id => pg-promise, phase => build] 
[error] Phase3Compile.scala:225 [E] [E1] src/main/scala/typings/pgDashPromiseLib/pgDashPromiseMod/package.scala:26:70
[E]      illegal cyclic reference involving type TQuery
[E]      L26:   type TVirtualQuery = js.Function1[/* values */ js.UndefOr[js.Any], TQuery]
[E]                                                                                ^
[E] src/main/scala/typings/pgDashPromiseLib/pgDashPromiseMod/package.scala: L26 [E1]
[E] Failed to compile 'pg-promise'
 [id => pg-promise, phase => build] 
[error] PhaseRunner.scala:88 Failure, [pg-promise => Compilation failed] [id => pg-promise, phase => build] 
