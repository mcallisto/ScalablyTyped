[info ] InferredDependency.scala:22 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(kefir) [id => kefir, phase => typescript, file => ../types/kefir/index.d.ts] 
[debug] PhaseRunner.scala:84 Success [id => kefir, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/kefir/index.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/kefir),TsIdentLibrarySimple(kefir)),TsIdentModule(None,List(kefir))) [id => kefir, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(kefir)) [id => kefir, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:189 Processing TsIdentLibrarySimple(kefir) [id => kefir, phase => typescript] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Observable)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Observable)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(Observable) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Pool)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Pool)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(Pool) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Stream)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Stream)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(Stream) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Property)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Property)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(Property) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(later)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(later)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(later) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(interval)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(interval)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(interval) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(sequentially)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(sequentially)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(sequentially) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromPoll)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromPoll)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(fromPoll) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(withInterval)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(withInterval)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(withInterval) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromCallback)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromCallback)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(fromCallback) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromNodeCallback)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromNodeCallback)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(fromNodeCallback) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromEvents)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromEvents)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(fromEvents) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(stream)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(stream)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(stream) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromESObservable)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromESObservable)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(fromESObservable) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(constant)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(constant)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(constant) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(constantError)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(constantError)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(constantError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromPromise)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(fromPromise)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(fromPromise) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(combine)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(combine)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(combine) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(zip)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(zip)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(zip) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(merge)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(merge)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(merge) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(concat)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(concat)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(concat) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(pool)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(pool)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(pool) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(repeat)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(repeat)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(repeat) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(staticLand)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir))] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(staticLand)))) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(kefir) / TsTypeObject() / TsMemberProperty(staticLand) / TsTypeQuery())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Leading) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(throttle) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Immediate) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(debounce) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Convert) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(valuesToErrors) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_ConvertValue) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(errorsToValues) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(bufferWithCount) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(bufferWithTimeOrCount) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(bufferBy) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_FlushOnChange) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclClass(Observable) / TsMemberFunction(bufferWhileBy) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Off) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(fromEvents) / TsFunSig() / TsFunParam() / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Ap) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(staticLand) / TsTypeObject() / TsMemberProperty(Observable) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Value) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(later) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Interval) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(interval) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_IntervalValues) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(sequentially) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Fn) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromPoll) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Emitter) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(withInterval) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Callback) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromCallback) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_CallbackError) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromNodeCallback) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Off) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromEvents) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsFunParam() / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_EventName) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromEvents) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_EmitterSubscribe) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(stream) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Observable) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromESObservable) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_ValueNever) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(constant) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Error) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(constantError) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Promise) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(fromPromise) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(combine) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Combinator) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(zip) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Obss) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(merge) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Obss) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(concat) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Pool) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(pool) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Generator) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(repeat) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Ap) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(staticLand) / TsTypeObject() / TsMemberProperty(Observable) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Observable) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject() / TsMemberProperty(staticLand) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Unsubscribe) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(ESObservable) / TsMemberFunction(subscribe) / TsFunSig() / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded later into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded interval into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded sequentially into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded fromPoll into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded withInterval into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded fromCallback into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded fromNodeCallback into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded fromEvents into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded stream into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded fromESObservable into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded constant into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded constantError into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded fromPromise into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded combine into 14 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded zip into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded merge into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded concat into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded pool into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded repeat into 1 methods [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsTypeObject())] 
[debug] PhaseRunner.scala:84 Success [id => kefir, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:42 Processing kefir [id => kefir, phase => scala.js] 
[info ] ImportType.scala:237 Failed type conversion: T[''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclTypeAlias(ValueOfAnObservable) / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0][''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: P[0][''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[6] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[6] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[7] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclVar(default) / TsMemberFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[6] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[7] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[6] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0][''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: P[0][''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0][''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: P[0][''] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[6] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[1] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[2] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[3] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[4] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[5] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[6] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[7] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[0] [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclInterface(Fn_) / TsMemberCall() / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(kefirLib) / Name(Fn_) [id => kefir, phase => scala.js, this => Name(kefirLib) / Name(Fn_)] 
[debug] PhaseRunner.scala:84 Success [id => kefir, phase => scala.js] 
[warn ] Phase3Compile.scala:206 Building kefir... [id => kefir, phase => build] 
[error] Phase3Compile.scala:225 [E] [E2] src/main/scala/typings/kefirLib/kefirMod/default.scala:85:7
[E]      method combine_TArray is defined twice;
[E]        the conflicting method combine_TArray was defined at line 83:7
[E]      L85:   def combine_TArray[T /* <: js.Array[kefirLib.kefirMod.Observable[_, _]] */](obss: T): kefirLib.kefirMod.Stream[
[E]                 ^
[E] [E1] src/main/scala/typings/kefirLib/kefirMod/^.scala:37:7
[E]      method combine_TArray is defined twice;
[E]        the conflicting method combine_TArray was defined at line 35:7
[E]      L37:   def combine_TArray[T /* <: js.Array[Observable[_, _]] */](obss: T): Stream[
[E]                 ^
[E] src/main/scala/typings/kefirLib/kefirMod/default.scala: L85 [E2]
[E] src/main/scala/typings/kefirLib/kefirMod/^.scala: L37 [E1]
[E] Failed to compile 'kefir'
 [id => kefir, phase => build] 
[error] PhaseRunner.scala:88 Failure, [kefir => Compilation failed] [id => kefir, phase => build] 
