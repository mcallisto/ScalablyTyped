[info ] ResolveExternalReferences.scala:82 Inferred augmented module None (TsIdentModule(None,List(htmlbars-inline-precompile))) [file => ../types/ember/index.d.ts, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(htmlbars-inline-precompile)), id => ember] 
[debug] PhaseRunner.scala:84 Success [id => ember, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember/index.d.ts),FromFolder(InFolder(/home/olvind/tmp/tso-cache/DefinitelyTyped/types/ember),TsIdentLibrarySimple(ember)),TsIdentModule(None,List(ember))) [id => ember, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ember)) [id => ember, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:189 Processing TsIdentLibrarySimple(ember) [id => ember, phase => typescript] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberArrayNs), TsIdentSimple(A)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(A) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberArrayNs), TsIdentSimple(isArray)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(isArray) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberEnumerable)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Enumerable) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberArrayNs), TsIdentSimple(default)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Array) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberMutableArray)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(MutableArray) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberNativeArray)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(NativeArray) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberMutableEnumerable)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(MutableEnumerable) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberActionHandler)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(ActionHandler) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberApplicationDeprecateNs), TsIdentSimple(deprecateFunc)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(deprecateFunc) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberApplicationDeprecateNs), TsIdentSimple(deprecate)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(deprecate) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberApplicationNs), TsIdentSimple(getOwner)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(getOwner) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberApplicationNs), TsIdentSimple(setOwner)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(setOwner) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObservable)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Observable) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectPromiseProxyNs), TsIdentSimple(default)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(PromiseProxyMixin) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(registerDeprecationHandler)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Debug) / TsTypeObject() / TsMemberProperty(registerDeprecationHandler) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(registerWarnHandler)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Debug) / TsTypeObject() / TsMemberProperty(registerWarnHandler) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberError)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Error) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectEventedNs), TsIdentSimple(default)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(Evented) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Rsvp)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberTestNs), TsIdentSimple(registerHelper)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(Test) / TsDeclVar(registerHelper) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberTestNs), TsIdentSimple(unregisterHelper)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(Test) / TsDeclVar(unregisterHelper) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberTestNs), TsIdentSimple(registerWaiter)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(Test) / TsDeclVar(registerWaiter) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberTestNs), TsIdentSimple(unregisterWaiter)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(Test) / TsDeclVar(unregisterWaiter) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberTestNs), TsIdentSimple(registerAsyncHelper)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(Test) / TsDeclVar(registerAsyncHelper) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberServiceNs), TsIdentSimple(inject)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclVar(service) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(Logger)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(Handlebars) / TsDeclVar(logger) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(camelize)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(camelize) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(capitalize)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(capitalize) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(classify)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(classify) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(dasherize)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(dasherize) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(decamelize)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(decamelize) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(htmlSafe)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(htmlSafe) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(isHTMLSafe)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(isHTMLSafe) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(loc)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(loc) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(underscore)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(underscore) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberStringNs), TsIdentSimple(w)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclNamespace(String) / TsDeclVar(w) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(computed)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberRunloopNs), TsIdentSimple(run)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(run) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(assert)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(assert) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(debug)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(debug) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(defineProperty)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(defineProperty) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(runInDebug)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(runInDebug) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(warn)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(warn) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectInternalsNs), TsIdentSimple(cacheFor)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(cacheFor) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectEventsNs), TsIdentSimple(addListener)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(addListener) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectEventsNs), TsIdentSimple(removeListener)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(removeListener) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectEventsNs), TsIdentSimple(sendEvent)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(sendEvent) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectEventedNs), TsIdentSimple(on)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(on) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(isBlank)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(isBlank) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(isEmpty)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(isEmpty) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(isNone)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(isNone) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(isPresent)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(isPresent) / TsTypeQuery())] 
[warn ] ResolveTypeQueries.scala:126 Couldn't resolve typeof EmberPolyfillsNs.merge [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(merge) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(aliasMethod)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(aliasMethod) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(observer)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(observer) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectObserversNs), TsIdentSimple(addObserver)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(addObserver) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectObserversNs), TsIdentSimple(removeObserver)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(removeObserver) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(get)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(get) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(notifyPropertyChange)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(notifyPropertyChange) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(getWithDefault)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(getWithDefault) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(getProperties)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(getProperties) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(setProperties)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(setProperties) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(set)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(set) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectNs), TsIdentSimple(trySet)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(trySet) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(compare)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(compare) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectInternalsNs), TsIdentSimple(copy)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(copy) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(isEqual)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(isEqual) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(typeOf)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(typeOf) / TsTypeQuery())] 
[warn ] ResolveTypeQueries.scala:126 Couldn't resolve typeof EmberPolyfillsNs.assign [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(assign) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectInternalsNs), TsIdentSimple(guidFor)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(guidFor) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberDebugNs), TsIdentSimple(inspect)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(inspect) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberUtilsNs), TsIdentSimple(tryInvoke)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(tryInvoke) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EmberObjectComputedNs), TsIdentSimple(expandProperties)))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsExport() / TsExporteeTree() / TsDeclNamespace(Ember) / TsDeclVar(expandProperties) / TsTypeQuery())] 
[info ] PreferTypeAlias.scala:55 Simplified to type alias [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclInterface(ArrayPrototypeExtensions))] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(ember,Some(controller)), TsIdentModule(Some(ember),List(controller)), TsIdentSimple(Registry))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclFunction(controller) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(ember,Some(service)), TsIdentModule(Some(ember),List(service)), TsIdentSimple(Registry))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclVar(service) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(ember,Some(controller)), TsIdentModule(Some(ember),List(controller)), TsIdentSimple(Registry))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclNamespace(inject) / TsDeclFunction(controller) / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(ember,Some(service)), TsIdentModule(Some(ember),List(service)), TsIdentSimple(Registry))) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclNamespace(inject) / TsDeclVar(service) / TsTypeObject() / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeKeyOf())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Values) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(all) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Reason) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(reject) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Arg) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(async) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassEventTarget) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(EventTarget) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_ValuesAny) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(race) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Value) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(resolve) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassPromise) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(Promise) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Array) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject() / TsMemberProperty(map) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_DependentKey) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject() / TsMemberProperty(deprecatingAlias) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Values) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(all) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Reason) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(reject) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Arg) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(async) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassEventTarget) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(EventTarget) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_ValuesAny) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(race) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Value) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(resolve) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassPromise) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject() / TsMemberProperty(Promise) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Array) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject() / TsMemberProperty(map) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_DependentKey) [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject() / TsMemberProperty(deprecatingAlias) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded cast into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclInterface(TypeofClassPromise))] 
[info ] ExpandCallables.scala:48 Expanded uniq into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded empty into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded gte into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded union into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded intersect into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded readOnly into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded map into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded oneWay into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded notEmpty into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded uniqBy into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded min into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded or into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded match into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded filter into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded alias into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded max into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded equal into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded bool into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded not into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded lte into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded deprecatingAlias into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded reads into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded mapBy into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded collect into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded sort into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded filterBy into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded none into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded lt into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded gt into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded setDiff into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded sum into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded and into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded registerDeprecationHandler into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(Debug) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded registerWarnHandler into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(Debug) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded all into 11 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded reject into 2 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded async into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded race into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded resolve into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded uniq into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded empty into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded gte into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded union into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded intersect into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded readOnly into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded map into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded oneWay into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded notEmpty into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded uniqBy into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded min into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded or into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded match into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded filter into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded alias into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded max into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded equal into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded bool into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded not into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded lte into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded deprecatingAlias into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded reads into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded mapBy into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded collect into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded sort into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded filterBy into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded none into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded lt into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded gt into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded setDiff into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded sum into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded and into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(computed) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded registerDeprecationHandler into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(Debug) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded registerWarnHandler into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(Debug) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded all into 11 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded reject into 2 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded async into 1 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded race into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded resolve into 3 methods [id => ember, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(RSVP) / TsTypeObject())] 
[debug] PhaseRunner.scala:84 Success [id => ember, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:42 Processing ember [id => ember, phase => scala.js] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(cacheFor) / TsMemberCall() / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[FNAME] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(tryInvoke) / TsMemberCall() / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[FNAME] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(tryInvoke) / TsMemberCall() / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[FNAME] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(tryInvoke) / TsMemberCall() / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(set) / TsMemberCall() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(set) / TsMemberCall() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(set) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(set) / TsMemberCall() / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/controller.@ember/controller.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclNamespace(inject) / TsDeclFunction(controller) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/controller.@ember/controller.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclNamespace(inject) / TsDeclFunction(controller) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/service.@ember/service.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclNamespace(inject) / TsDeclVar(service) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/service.@ember/service.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclNamespace(inject) / TsDeclVar(service) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(getWithDefault) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(getWithDefault) / TsMemberCall() / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(default) / TsDeclVar(get) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(cacheFor) / TsMemberCall() / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[FNAME] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(tryInvoke) / TsMemberCall() / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[FNAME] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(tryInvoke) / TsMemberCall() / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[FNAME] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(tryInvoke) / TsMemberCall() / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(set) / TsMemberCall() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(set) / TsMemberCall() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(set) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(set) / TsMemberCall() / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/controller.@ember/controller.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclFunction(controller) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/controller.@ember/controller.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclFunction(controller) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/service.@ember/service.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclVar(service) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: @ember/service.@ember/service.Registry[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclNamespace(inject) / TsDeclVar(service) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(getWithDefault) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(getWithDefault) / TsMemberCall() / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:237 Failed type conversion: T[K] [id => ember, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ember) / TsDeclNamespace(Ember) / TsDeclVar(get) / TsMemberCall() / TsTypeRef() / TsTypeLookup())] 
[info ] CompleteClass.scala:64 Completed implementations Vector(`<apply>`) [id => ember, phase => scala.js, this => Name(emberLib) / Name(emberMod) / Name(EmberNs) / Name(ComputedProperty)] 
[debug] PhaseRunner.scala:84 Success [id => ember, phase => scala.js] 
[warn ] PhaseRunner.scala:70 Failed because of, [@ember/object => Compilation failed] [id => ember, phase => build] 
[error] PhaseRunner.scala:88 Failure, [@ember/object => Compilation failed] [id => ember, phase => build] 
